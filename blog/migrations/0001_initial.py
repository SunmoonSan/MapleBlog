# Generated by Django 2.0.4 on 2018-05-02 17:50

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=11, null=True)),
                ('password', models.CharField(max_length=100)),
                ('intro', models.TextField()),
                ('nickname', models.CharField(blank=True, max_length=100, null=True)),
                ('avatar', models.ImageField(blank=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('publish_time', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ArticleLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=True, to='blog.Article')),
                ('fromUser', models.ForeignKey(on_delete=True, related_name='article_like_from_uid', to='blog.Account')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_type', models.BooleanField()),
                ('comment_id', models.IntegerField(default=-1)),
                ('content', models.TextField()),
                ('ptime', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=True, to='blog.Article')),
                ('fromUser', models.ForeignKey(on_delete=True, related_name='comment_from_uid', to='blog.Account')),
                ('toUser', models.ForeignKey(null=True, on_delete=True, related_name='comment_to_uid', to='blog.Account')),
            ],
            options={
                'ordering': ('-ptime',),
            },
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=True, to='blog.Comment')),
                ('fromUser', models.ForeignKey(on_delete=True, related_name='comment_like_from_uid', to='blog.Account')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='articleType',
            field=models.ForeignKey(on_delete=True, to='blog.ArticleType'),
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(on_delete=True, to='blog.Account'),
        ),
        migrations.CreateModel(
            name='CommentResult',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('blog.comment',),
        ),
    ]
